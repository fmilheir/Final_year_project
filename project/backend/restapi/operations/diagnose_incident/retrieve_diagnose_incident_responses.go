// Code generated by go-swagger; DO NOT EDIT.

package diagnose_incident

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/fmilheir/final_year_project/backend/models"
)

// RetrieveDiagnoseIncidentOKCode is the HTTP code returned for type RetrieveDiagnoseIncidentOK
const RetrieveDiagnoseIncidentOKCode int = 200

/*
RetrieveDiagnoseIncidentOK Success

swagger:response retrieveDiagnoseIncidentOK
*/
type RetrieveDiagnoseIncidentOK struct {

	/*
	  In: Body
	*/
	Payload *models.DiagnoseIncident `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentOK creates RetrieveDiagnoseIncidentOK with default headers values
func NewRetrieveDiagnoseIncidentOK() *RetrieveDiagnoseIncidentOK {

	return &RetrieveDiagnoseIncidentOK{}
}

// WithPayload adds the payload to the retrieve diagnose incident o k response
func (o *RetrieveDiagnoseIncidentOK) WithPayload(payload *models.DiagnoseIncident) *RetrieveDiagnoseIncidentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident o k response
func (o *RetrieveDiagnoseIncidentOK) SetPayload(payload *models.DiagnoseIncident) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentBadRequestCode is the HTTP code returned for type RetrieveDiagnoseIncidentBadRequest
const RetrieveDiagnoseIncidentBadRequestCode int = 400

/*
RetrieveDiagnoseIncidentBadRequest Bad Request

swagger:response retrieveDiagnoseIncidentBadRequest
*/
type RetrieveDiagnoseIncidentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentBadRequest creates RetrieveDiagnoseIncidentBadRequest with default headers values
func NewRetrieveDiagnoseIncidentBadRequest() *RetrieveDiagnoseIncidentBadRequest {

	return &RetrieveDiagnoseIncidentBadRequest{}
}

// WithPayload adds the payload to the retrieve diagnose incident bad request response
func (o *RetrieveDiagnoseIncidentBadRequest) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident bad request response
func (o *RetrieveDiagnoseIncidentBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentUnauthorizedCode is the HTTP code returned for type RetrieveDiagnoseIncidentUnauthorized
const RetrieveDiagnoseIncidentUnauthorizedCode int = 401

/*
RetrieveDiagnoseIncidentUnauthorized Unauthorized

swagger:response retrieveDiagnoseIncidentUnauthorized
*/
type RetrieveDiagnoseIncidentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentUnauthorized creates RetrieveDiagnoseIncidentUnauthorized with default headers values
func NewRetrieveDiagnoseIncidentUnauthorized() *RetrieveDiagnoseIncidentUnauthorized {

	return &RetrieveDiagnoseIncidentUnauthorized{}
}

// WithPayload adds the payload to the retrieve diagnose incident unauthorized response
func (o *RetrieveDiagnoseIncidentUnauthorized) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident unauthorized response
func (o *RetrieveDiagnoseIncidentUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentForbiddenCode is the HTTP code returned for type RetrieveDiagnoseIncidentForbidden
const RetrieveDiagnoseIncidentForbiddenCode int = 403

/*
RetrieveDiagnoseIncidentForbidden Forbidden

swagger:response retrieveDiagnoseIncidentForbidden
*/
type RetrieveDiagnoseIncidentForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentForbidden creates RetrieveDiagnoseIncidentForbidden with default headers values
func NewRetrieveDiagnoseIncidentForbidden() *RetrieveDiagnoseIncidentForbidden {

	return &RetrieveDiagnoseIncidentForbidden{}
}

// WithPayload adds the payload to the retrieve diagnose incident forbidden response
func (o *RetrieveDiagnoseIncidentForbidden) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident forbidden response
func (o *RetrieveDiagnoseIncidentForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentNotFoundCode is the HTTP code returned for type RetrieveDiagnoseIncidentNotFound
const RetrieveDiagnoseIncidentNotFoundCode int = 404

/*
RetrieveDiagnoseIncidentNotFound Not Found

swagger:response retrieveDiagnoseIncidentNotFound
*/
type RetrieveDiagnoseIncidentNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentNotFound creates RetrieveDiagnoseIncidentNotFound with default headers values
func NewRetrieveDiagnoseIncidentNotFound() *RetrieveDiagnoseIncidentNotFound {

	return &RetrieveDiagnoseIncidentNotFound{}
}

// WithPayload adds the payload to the retrieve diagnose incident not found response
func (o *RetrieveDiagnoseIncidentNotFound) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident not found response
func (o *RetrieveDiagnoseIncidentNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentMethodNotAllowedCode is the HTTP code returned for type RetrieveDiagnoseIncidentMethodNotAllowed
const RetrieveDiagnoseIncidentMethodNotAllowedCode int = 405

/*
RetrieveDiagnoseIncidentMethodNotAllowed Method Not allowed

swagger:response retrieveDiagnoseIncidentMethodNotAllowed
*/
type RetrieveDiagnoseIncidentMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentMethodNotAllowed creates RetrieveDiagnoseIncidentMethodNotAllowed with default headers values
func NewRetrieveDiagnoseIncidentMethodNotAllowed() *RetrieveDiagnoseIncidentMethodNotAllowed {

	return &RetrieveDiagnoseIncidentMethodNotAllowed{}
}

// WithPayload adds the payload to the retrieve diagnose incident method not allowed response
func (o *RetrieveDiagnoseIncidentMethodNotAllowed) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident method not allowed response
func (o *RetrieveDiagnoseIncidentMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentConflictCode is the HTTP code returned for type RetrieveDiagnoseIncidentConflict
const RetrieveDiagnoseIncidentConflictCode int = 409

/*
RetrieveDiagnoseIncidentConflict Conflict

swagger:response retrieveDiagnoseIncidentConflict
*/
type RetrieveDiagnoseIncidentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentConflict creates RetrieveDiagnoseIncidentConflict with default headers values
func NewRetrieveDiagnoseIncidentConflict() *RetrieveDiagnoseIncidentConflict {

	return &RetrieveDiagnoseIncidentConflict{}
}

// WithPayload adds the payload to the retrieve diagnose incident conflict response
func (o *RetrieveDiagnoseIncidentConflict) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident conflict response
func (o *RetrieveDiagnoseIncidentConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RetrieveDiagnoseIncidentInternalServerErrorCode is the HTTP code returned for type RetrieveDiagnoseIncidentInternalServerError
const RetrieveDiagnoseIncidentInternalServerErrorCode int = 500

/*
RetrieveDiagnoseIncidentInternalServerError Internal Server Error

swagger:response retrieveDiagnoseIncidentInternalServerError
*/
type RetrieveDiagnoseIncidentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRetrieveDiagnoseIncidentInternalServerError creates RetrieveDiagnoseIncidentInternalServerError with default headers values
func NewRetrieveDiagnoseIncidentInternalServerError() *RetrieveDiagnoseIncidentInternalServerError {

	return &RetrieveDiagnoseIncidentInternalServerError{}
}

// WithPayload adds the payload to the retrieve diagnose incident internal server error response
func (o *RetrieveDiagnoseIncidentInternalServerError) WithPayload(payload *models.Error) *RetrieveDiagnoseIncidentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the retrieve diagnose incident internal server error response
func (o *RetrieveDiagnoseIncidentInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RetrieveDiagnoseIncidentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
