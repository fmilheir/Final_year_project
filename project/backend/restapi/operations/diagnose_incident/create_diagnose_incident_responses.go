// Code generated by go-swagger; DO NOT EDIT.

package diagnose_incident

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/fmilheir/final_year_project/backend/models"
)

// CreateDiagnoseIncidentCreatedCode is the HTTP code returned for type CreateDiagnoseIncidentCreated
const CreateDiagnoseIncidentCreatedCode int = 201

/*
CreateDiagnoseIncidentCreated Created

swagger:response createDiagnoseIncidentCreated
*/
type CreateDiagnoseIncidentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.DiagnoseIncident `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentCreated creates CreateDiagnoseIncidentCreated with default headers values
func NewCreateDiagnoseIncidentCreated() *CreateDiagnoseIncidentCreated {

	return &CreateDiagnoseIncidentCreated{}
}

// WithPayload adds the payload to the create diagnose incident created response
func (o *CreateDiagnoseIncidentCreated) WithPayload(payload *models.DiagnoseIncident) *CreateDiagnoseIncidentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident created response
func (o *CreateDiagnoseIncidentCreated) SetPayload(payload *models.DiagnoseIncident) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentBadRequestCode is the HTTP code returned for type CreateDiagnoseIncidentBadRequest
const CreateDiagnoseIncidentBadRequestCode int = 400

/*
CreateDiagnoseIncidentBadRequest Bad Request

swagger:response createDiagnoseIncidentBadRequest
*/
type CreateDiagnoseIncidentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentBadRequest creates CreateDiagnoseIncidentBadRequest with default headers values
func NewCreateDiagnoseIncidentBadRequest() *CreateDiagnoseIncidentBadRequest {

	return &CreateDiagnoseIncidentBadRequest{}
}

// WithPayload adds the payload to the create diagnose incident bad request response
func (o *CreateDiagnoseIncidentBadRequest) WithPayload(payload *models.Error) *CreateDiagnoseIncidentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident bad request response
func (o *CreateDiagnoseIncidentBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentUnauthorizedCode is the HTTP code returned for type CreateDiagnoseIncidentUnauthorized
const CreateDiagnoseIncidentUnauthorizedCode int = 401

/*
CreateDiagnoseIncidentUnauthorized Unauthorized

swagger:response createDiagnoseIncidentUnauthorized
*/
type CreateDiagnoseIncidentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentUnauthorized creates CreateDiagnoseIncidentUnauthorized with default headers values
func NewCreateDiagnoseIncidentUnauthorized() *CreateDiagnoseIncidentUnauthorized {

	return &CreateDiagnoseIncidentUnauthorized{}
}

// WithPayload adds the payload to the create diagnose incident unauthorized response
func (o *CreateDiagnoseIncidentUnauthorized) WithPayload(payload *models.Error) *CreateDiagnoseIncidentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident unauthorized response
func (o *CreateDiagnoseIncidentUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentForbiddenCode is the HTTP code returned for type CreateDiagnoseIncidentForbidden
const CreateDiagnoseIncidentForbiddenCode int = 403

/*
CreateDiagnoseIncidentForbidden Forbidden

swagger:response createDiagnoseIncidentForbidden
*/
type CreateDiagnoseIncidentForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentForbidden creates CreateDiagnoseIncidentForbidden with default headers values
func NewCreateDiagnoseIncidentForbidden() *CreateDiagnoseIncidentForbidden {

	return &CreateDiagnoseIncidentForbidden{}
}

// WithPayload adds the payload to the create diagnose incident forbidden response
func (o *CreateDiagnoseIncidentForbidden) WithPayload(payload *models.Error) *CreateDiagnoseIncidentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident forbidden response
func (o *CreateDiagnoseIncidentForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentMethodNotAllowedCode is the HTTP code returned for type CreateDiagnoseIncidentMethodNotAllowed
const CreateDiagnoseIncidentMethodNotAllowedCode int = 405

/*
CreateDiagnoseIncidentMethodNotAllowed Method Not allowed

swagger:response createDiagnoseIncidentMethodNotAllowed
*/
type CreateDiagnoseIncidentMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentMethodNotAllowed creates CreateDiagnoseIncidentMethodNotAllowed with default headers values
func NewCreateDiagnoseIncidentMethodNotAllowed() *CreateDiagnoseIncidentMethodNotAllowed {

	return &CreateDiagnoseIncidentMethodNotAllowed{}
}

// WithPayload adds the payload to the create diagnose incident method not allowed response
func (o *CreateDiagnoseIncidentMethodNotAllowed) WithPayload(payload *models.Error) *CreateDiagnoseIncidentMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident method not allowed response
func (o *CreateDiagnoseIncidentMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentConflictCode is the HTTP code returned for type CreateDiagnoseIncidentConflict
const CreateDiagnoseIncidentConflictCode int = 409

/*
CreateDiagnoseIncidentConflict Conflict

swagger:response createDiagnoseIncidentConflict
*/
type CreateDiagnoseIncidentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentConflict creates CreateDiagnoseIncidentConflict with default headers values
func NewCreateDiagnoseIncidentConflict() *CreateDiagnoseIncidentConflict {

	return &CreateDiagnoseIncidentConflict{}
}

// WithPayload adds the payload to the create diagnose incident conflict response
func (o *CreateDiagnoseIncidentConflict) WithPayload(payload *models.Error) *CreateDiagnoseIncidentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident conflict response
func (o *CreateDiagnoseIncidentConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDiagnoseIncidentInternalServerErrorCode is the HTTP code returned for type CreateDiagnoseIncidentInternalServerError
const CreateDiagnoseIncidentInternalServerErrorCode int = 500

/*
CreateDiagnoseIncidentInternalServerError Internal Server Error

swagger:response createDiagnoseIncidentInternalServerError
*/
type CreateDiagnoseIncidentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateDiagnoseIncidentInternalServerError creates CreateDiagnoseIncidentInternalServerError with default headers values
func NewCreateDiagnoseIncidentInternalServerError() *CreateDiagnoseIncidentInternalServerError {

	return &CreateDiagnoseIncidentInternalServerError{}
}

// WithPayload adds the payload to the create diagnose incident internal server error response
func (o *CreateDiagnoseIncidentInternalServerError) WithPayload(payload *models.Error) *CreateDiagnoseIncidentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create diagnose incident internal server error response
func (o *CreateDiagnoseIncidentInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDiagnoseIncidentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
