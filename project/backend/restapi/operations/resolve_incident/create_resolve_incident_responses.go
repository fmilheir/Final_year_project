// Code generated by go-swagger; DO NOT EDIT.

package resolve_incident

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/fmilheir/final_year_project/backend/models"
)

// CreateResolveIncidentCreatedCode is the HTTP code returned for type CreateResolveIncidentCreated
const CreateResolveIncidentCreatedCode int = 201

/*
CreateResolveIncidentCreated Created

swagger:response createResolveIncidentCreated
*/
type CreateResolveIncidentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ResolveIncident `json:"body,omitempty"`
}

// NewCreateResolveIncidentCreated creates CreateResolveIncidentCreated with default headers values
func NewCreateResolveIncidentCreated() *CreateResolveIncidentCreated {

	return &CreateResolveIncidentCreated{}
}

// WithPayload adds the payload to the create resolve incident created response
func (o *CreateResolveIncidentCreated) WithPayload(payload *models.ResolveIncident) *CreateResolveIncidentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident created response
func (o *CreateResolveIncidentCreated) SetPayload(payload *models.ResolveIncident) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentBadRequestCode is the HTTP code returned for type CreateResolveIncidentBadRequest
const CreateResolveIncidentBadRequestCode int = 400

/*
CreateResolveIncidentBadRequest Bad Request

swagger:response createResolveIncidentBadRequest
*/
type CreateResolveIncidentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentBadRequest creates CreateResolveIncidentBadRequest with default headers values
func NewCreateResolveIncidentBadRequest() *CreateResolveIncidentBadRequest {

	return &CreateResolveIncidentBadRequest{}
}

// WithPayload adds the payload to the create resolve incident bad request response
func (o *CreateResolveIncidentBadRequest) WithPayload(payload *models.Error) *CreateResolveIncidentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident bad request response
func (o *CreateResolveIncidentBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentUnauthorizedCode is the HTTP code returned for type CreateResolveIncidentUnauthorized
const CreateResolveIncidentUnauthorizedCode int = 401

/*
CreateResolveIncidentUnauthorized Unauthorized

swagger:response createResolveIncidentUnauthorized
*/
type CreateResolveIncidentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentUnauthorized creates CreateResolveIncidentUnauthorized with default headers values
func NewCreateResolveIncidentUnauthorized() *CreateResolveIncidentUnauthorized {

	return &CreateResolveIncidentUnauthorized{}
}

// WithPayload adds the payload to the create resolve incident unauthorized response
func (o *CreateResolveIncidentUnauthorized) WithPayload(payload *models.Error) *CreateResolveIncidentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident unauthorized response
func (o *CreateResolveIncidentUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentForbiddenCode is the HTTP code returned for type CreateResolveIncidentForbidden
const CreateResolveIncidentForbiddenCode int = 403

/*
CreateResolveIncidentForbidden Forbidden

swagger:response createResolveIncidentForbidden
*/
type CreateResolveIncidentForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentForbidden creates CreateResolveIncidentForbidden with default headers values
func NewCreateResolveIncidentForbidden() *CreateResolveIncidentForbidden {

	return &CreateResolveIncidentForbidden{}
}

// WithPayload adds the payload to the create resolve incident forbidden response
func (o *CreateResolveIncidentForbidden) WithPayload(payload *models.Error) *CreateResolveIncidentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident forbidden response
func (o *CreateResolveIncidentForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentMethodNotAllowedCode is the HTTP code returned for type CreateResolveIncidentMethodNotAllowed
const CreateResolveIncidentMethodNotAllowedCode int = 405

/*
CreateResolveIncidentMethodNotAllowed Method Not allowed

swagger:response createResolveIncidentMethodNotAllowed
*/
type CreateResolveIncidentMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentMethodNotAllowed creates CreateResolveIncidentMethodNotAllowed with default headers values
func NewCreateResolveIncidentMethodNotAllowed() *CreateResolveIncidentMethodNotAllowed {

	return &CreateResolveIncidentMethodNotAllowed{}
}

// WithPayload adds the payload to the create resolve incident method not allowed response
func (o *CreateResolveIncidentMethodNotAllowed) WithPayload(payload *models.Error) *CreateResolveIncidentMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident method not allowed response
func (o *CreateResolveIncidentMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentConflictCode is the HTTP code returned for type CreateResolveIncidentConflict
const CreateResolveIncidentConflictCode int = 409

/*
CreateResolveIncidentConflict Conflict

swagger:response createResolveIncidentConflict
*/
type CreateResolveIncidentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentConflict creates CreateResolveIncidentConflict with default headers values
func NewCreateResolveIncidentConflict() *CreateResolveIncidentConflict {

	return &CreateResolveIncidentConflict{}
}

// WithPayload adds the payload to the create resolve incident conflict response
func (o *CreateResolveIncidentConflict) WithPayload(payload *models.Error) *CreateResolveIncidentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident conflict response
func (o *CreateResolveIncidentConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateResolveIncidentInternalServerErrorCode is the HTTP code returned for type CreateResolveIncidentInternalServerError
const CreateResolveIncidentInternalServerErrorCode int = 500

/*
CreateResolveIncidentInternalServerError Internal Server Error

swagger:response createResolveIncidentInternalServerError
*/
type CreateResolveIncidentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateResolveIncidentInternalServerError creates CreateResolveIncidentInternalServerError with default headers values
func NewCreateResolveIncidentInternalServerError() *CreateResolveIncidentInternalServerError {

	return &CreateResolveIncidentInternalServerError{}
}

// WithPayload adds the payload to the create resolve incident internal server error response
func (o *CreateResolveIncidentInternalServerError) WithPayload(payload *models.Error) *CreateResolveIncidentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create resolve incident internal server error response
func (o *CreateResolveIncidentInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateResolveIncidentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
