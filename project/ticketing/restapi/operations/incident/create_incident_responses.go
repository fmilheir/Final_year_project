// Code generated by go-swagger; DO NOT EDIT.

package incident

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"fmilheir/test_swagger/models"
)

// CreateIncidentCreatedCode is the HTTP code returned for type CreateIncidentCreated
const CreateIncidentCreatedCode int = 201

/*
CreateIncidentCreated Created

swagger:response createIncidentCreated
*/
type CreateIncidentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Incident `json:"body,omitempty"`
}

// NewCreateIncidentCreated creates CreateIncidentCreated with default headers values
func NewCreateIncidentCreated() *CreateIncidentCreated {

	return &CreateIncidentCreated{}
}

// WithPayload adds the payload to the create incident created response
func (o *CreateIncidentCreated) WithPayload(payload *models.Incident) *CreateIncidentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident created response
func (o *CreateIncidentCreated) SetPayload(payload *models.Incident) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentBadRequestCode is the HTTP code returned for type CreateIncidentBadRequest
const CreateIncidentBadRequestCode int = 400

/*
CreateIncidentBadRequest Bad Request

swagger:response createIncidentBadRequest
*/
type CreateIncidentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentBadRequest creates CreateIncidentBadRequest with default headers values
func NewCreateIncidentBadRequest() *CreateIncidentBadRequest {

	return &CreateIncidentBadRequest{}
}

// WithPayload adds the payload to the create incident bad request response
func (o *CreateIncidentBadRequest) WithPayload(payload *models.Error) *CreateIncidentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident bad request response
func (o *CreateIncidentBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentUnauthorizedCode is the HTTP code returned for type CreateIncidentUnauthorized
const CreateIncidentUnauthorizedCode int = 401

/*
CreateIncidentUnauthorized Unauthorized

swagger:response createIncidentUnauthorized
*/
type CreateIncidentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentUnauthorized creates CreateIncidentUnauthorized with default headers values
func NewCreateIncidentUnauthorized() *CreateIncidentUnauthorized {

	return &CreateIncidentUnauthorized{}
}

// WithPayload adds the payload to the create incident unauthorized response
func (o *CreateIncidentUnauthorized) WithPayload(payload *models.Error) *CreateIncidentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident unauthorized response
func (o *CreateIncidentUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentForbiddenCode is the HTTP code returned for type CreateIncidentForbidden
const CreateIncidentForbiddenCode int = 403

/*
CreateIncidentForbidden Forbidden

swagger:response createIncidentForbidden
*/
type CreateIncidentForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentForbidden creates CreateIncidentForbidden with default headers values
func NewCreateIncidentForbidden() *CreateIncidentForbidden {

	return &CreateIncidentForbidden{}
}

// WithPayload adds the payload to the create incident forbidden response
func (o *CreateIncidentForbidden) WithPayload(payload *models.Error) *CreateIncidentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident forbidden response
func (o *CreateIncidentForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentMethodNotAllowedCode is the HTTP code returned for type CreateIncidentMethodNotAllowed
const CreateIncidentMethodNotAllowedCode int = 405

/*
CreateIncidentMethodNotAllowed Method Not allowed

swagger:response createIncidentMethodNotAllowed
*/
type CreateIncidentMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentMethodNotAllowed creates CreateIncidentMethodNotAllowed with default headers values
func NewCreateIncidentMethodNotAllowed() *CreateIncidentMethodNotAllowed {

	return &CreateIncidentMethodNotAllowed{}
}

// WithPayload adds the payload to the create incident method not allowed response
func (o *CreateIncidentMethodNotAllowed) WithPayload(payload *models.Error) *CreateIncidentMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident method not allowed response
func (o *CreateIncidentMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentConflictCode is the HTTP code returned for type CreateIncidentConflict
const CreateIncidentConflictCode int = 409

/*
CreateIncidentConflict Conflict

swagger:response createIncidentConflict
*/
type CreateIncidentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentConflict creates CreateIncidentConflict with default headers values
func NewCreateIncidentConflict() *CreateIncidentConflict {

	return &CreateIncidentConflict{}
}

// WithPayload adds the payload to the create incident conflict response
func (o *CreateIncidentConflict) WithPayload(payload *models.Error) *CreateIncidentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident conflict response
func (o *CreateIncidentConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateIncidentInternalServerErrorCode is the HTTP code returned for type CreateIncidentInternalServerError
const CreateIncidentInternalServerErrorCode int = 500

/*
CreateIncidentInternalServerError Internal Server Error

swagger:response createIncidentInternalServerError
*/
type CreateIncidentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIncidentInternalServerError creates CreateIncidentInternalServerError with default headers values
func NewCreateIncidentInternalServerError() *CreateIncidentInternalServerError {

	return &CreateIncidentInternalServerError{}
}

// WithPayload adds the payload to the create incident internal server error response
func (o *CreateIncidentInternalServerError) WithPayload(payload *models.Error) *CreateIncidentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create incident internal server error response
func (o *CreateIncidentInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIncidentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
