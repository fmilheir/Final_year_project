version: '3.8'

services:

  backend:
    build:
      context: ./project/backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - GIN_MODE=debug
    env_file:
      - ./project/backend/.env
    volumes:
      - ./project/backend:/app
      - ./project/backend/node_modules:/app/node_modules
      - ./project/backend/certificates:/usr/src/app/certificates

  db:
      image: postgres:alpine
      environment:
        POSTGRES_USER: "myuser"
        POSTGRES_PASSWORD: "mypassword"
        POSTGRES_DB: "mydb"
      ports:
        - '5432:5432'
      volumes:
        - postgres-data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./project/react-auth
      dockerfile: Dockerfile
    ports:
      - '3000:80'
    volumes:
      - ./project/react-auth/src:/etc/src
      - ./project/react-auth/public:/app/public
    depends_on:
      - backend
    environment:
      - NODE_ENV=development

  #chatbot:
    #build:
    #  context: ./project/chatbot
    #  dockerfile: Dockerfile
    #ports:
    #  - '5000:5000'
    #volumes:
    #  - ./project/chatbot:/app
    #depends_on:
    #  - backend
    #environment:
    #  - GIN_MODE=debug
    #env_file:
    #  - ./project/chatbot/.env
    #command: ["sh", "-c", "crontab /app/crontab.txt && cron -f"]

volumes:
  postgres-data:
